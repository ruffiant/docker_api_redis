#version: '3.8'

services:
  # PHP服务
  app:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: laravel_app
    volumes:
      - ./project:/var/www/html
    depends_on:
      - mysql_master
      - redis_master
      - rabbitmq
    networks:
      - api_server_network

  # Nginx服务
  nginx:
    image: nginx:1.26
    container_name: laravel_nginx
    ports:
      - "81:80"
    volumes:
      - ./project:/var/www/html
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - app
    networks:
      - api_server_network

  # MySQL主服务器
  mysql_master:
    image: mysql:8.0
    container_name: mysql_master
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
    volumes:
      - mysql_master_data:/var/lib/mysql
      - ./docker/mysql/master:/etc/mysql/conf.d
    networks:
      - api_server_network

  # MySQL从服务器
  mysql_slave:
    image: mysql:8.0
    container_name: mysql_slave
    ports:
      - "3308:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
    volumes:
      - mysql_slave_data:/var/lib/mysql
      - ./docker/mysql/slave:/etc/mysql/conf.d
    depends_on:
      - mysql_master
    networks:
      - api_server_network

  # Redis主服务器
  redis_master:
    # image: redis:alpine
    image: redis:7.4.2-bookworm
    container_name: redis_master
    ports:
      - "6380:6379"
    volumes:
      - ./docker/redis/master:/usr/local/etc/redis
    networks:
      - api_server_network

  # Redis从服务器
  redis_slave:
    image: redis:7.4.2-bookworm
    container_name: redis_slave
    ports:
      - "6381:6379"
    volumes:
      - ./docker/redis/slave:/usr/local/etc/redis
    depends_on:
      - redis_master
    networks:
      - api_server_network

  # RabbitMQ服务
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - api_server_network

  # Elasticsearch服务
  elasticsearch:
    image: elasticsearch:8.17.2
    container_name: elasticsearch
    restart: no
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true    # 禁用安全功能以便测试
      - ELASTIC_PASSWORD=elastic123      # elastic 超级用户密码
      - KIBANA_SYSTEM_PASSWORD=kibana123 #
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"  # 设置 JVM 堆大小
      - discovery.type=single-node
      # 设置 Elasticsearch 的发现类型为单节点
      - ES_JAVA_OPTS=-Xms1024m -Xmx1024m
      # 设置 Elasticsearch 的 Java 虚拟机选项，分配 256MB 堆内存
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - ./docker/elasticsearch/logs:/usr/share/elasticsearch/logs
      # 挂载日志目录
      - ./docker/elasticsearch/data:/usr/share/elasticsearch/data
      # 挂载数据目录
      - ./docker/elasticsearch/plugins:/usr/share/elasticsearch/plugins
      # 挂载插件目录
      - ./docker/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      # 挂载配置文件
    networks:
      - api_server_network

  # Logstash服务
  logstash:
    image: logstash:8.17.2
    container_name: logstash
    volumes:
      - ./docker/logstash/pipeline:/usr/share/logstash/pipeline
      - ./docker/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
    depends_on:
      - elasticsearch
    networks:
      - api_server_network
  # Kibana服务
  kibana:
    image: kibana:8.17.2
    restart: no # 不重启  
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=kibana123
      - SERVER_HOST=0.0.0.0
      - XPACK_SECURITY_ENABLED=true     # 启用安全功能
      - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=something_at_least_32_characters
    depends_on:
      - elasticsearch
    volumes:
      - ./docker/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    networks:
      - api_server_network

  # Consul服务注册中心
  consul:
    image: consul:1.15.4
    container_name: consul
    ports:
      - "8500:8500"
    networks:
      - api_server_network

networks:
  api_server_network:
    driver: bridge

volumes:
  mysql_master_data:
  mysql_slave_data:
  elasticsearch_data: